MONGODB_URI=mongodb+srv://pedrojorgeandrade:XbUZOpsYDzfzTvrh@cluster0.m3v0c.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
PORT=5001
```

Reemplaza `<username>`, `<password>`, `<cluster-url>`, y `<dbname>` con los valores correspondientes de tu configuración de MongoDB Atlas.

### Paso 2: Verifica que [dotenv](http://_vscodecontentref_/0) esté configurado correctamente

Asegúrate de que [dotenv](http://_vscodecontentref_/1) esté configurado correctamente en tu archivo [app.js](http://_vscodecontentref_/2) y que esté cargando las variables de entorno desde el archivo `.env`.

### Paso 3: Verifica el archivo [app.js](http://_vscodecontentref_/3)

Asegúrate de que tu archivo [app.js](http://_vscodecontentref_/4) esté configurado correctamente para usar las variables de entorno. Aquí tienes un ejemplo de cómo debería verse:

```javascript
<vscode_codeblock_uri>file:///Users/pedroandradejimenez/Library/CloudStorage/OneDrive-UniversidadCat%C3%B3licadeChile/MERN/my-fullstack-app/backend/src/app.js</vscode_codeblock_uri>const express = require('express');
const mongoose = require('mongoose');
const dotenv = require('dotenv');
const routes = require('./routes');

dotenv.config();

const app = express();
const PORT = process.env.PORT || 5001;

app.use(express.json());
app.use('/api', routes);

// Primera ruta GET
app.get('/', (req, res) => {
    res.send('Bienvenido al mundo web');
});

mongoose.connect(process.env.MONGODB_URI, { useNewUrlParser: true, useUnifiedTopology: true })
    .then(() => console.log('MongoDB connected'))
    .catch(err => console.log(err));

app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});